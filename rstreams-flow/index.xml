<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RStreams Flow on RStreams</title><link>https://rstreams.org/rstreams-flow/</link><description>Recent content in RStreams Flow on RStreams</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 19 May 2022 17:55:12 +0000</lastBuildDate><atom:link href="https://rstreams.org/rstreams-flow/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting Started</title><link>https://rstreams.org/rstreams-flow/getting-started/</link><pubDate>Thu, 19 May 2022 17:55:12 +0000</pubDate><guid>https://rstreams.org/rstreams-flow/getting-started/</guid><description>ToC
Summary Install Node and NPM Install the Serverless Framework Get bus stack name AWS Access Create a new project from an RStreams Flow Template Step 1 - Create the project from the template Step 2 - Initialize everything Step 3 - Compile and Run Project Commands using NPM RStreams flow is powered by the popular Serverless Framework. It has a very large community and many plugins that provide a scaffold for RStreams Flow to build on.</description></item><item><title>Running Locally</title><link>https://rstreams.org/rstreams-flow/running-locally/</link><pubDate>Thu, 19 May 2022 17:55:12 +0000</pubDate><guid>https://rstreams.org/rstreams-flow/running-locally/</guid><description>ToC
Summary Prerequisites Things you need to know Invoke Bots Locally Summary This doc explains how to invoke bots running locally that hit actual queues in a deployed RStreams Bus as well as how to mock out a queue and invoke a bot with that mock data. It also explains how to set breakpoints in your code.
Prerequisites This assumes you are using Visual Studio Code as your IDE, however everything should be possible in your favorite IDE such as IntelliJ or whatever it may be If you want to follow along, you should go through the Getting Started Guide Things you need to know Microservice Name / Service Name Your project&amp;rsquo;s microservice name, also just called the Service Name, is used in many places.</description></item><item><title>Project Organization</title><link>https://rstreams.org/rstreams-flow/project-organization/</link><pubDate>Thu, 19 May 2022 17:55:12 +0000</pubDate><guid>https://rstreams.org/rstreams-flow/project-organization/</guid><description>ToC
Summary Root-level Files and Directories Summary This doc explains how projects are organized and what all the files are and what they mean, using the example project from the Getting Started Guide.
Root-level Files and Directories Path Description .mock-data/ Developers put their mock data in this directory. The SDK, when it generates mock data, will also put it in here .vscode/ Config to make working in Visual Studio code easier with RStreams bots/ All bots are in this directory cloudformation/ Additional CloudFormation templates that will be merged into the final stack go in this directory lib/ Standard directory developers will often use to put project-specific files within node_modules/ Standard Node JS location for downloaded 3rd party Node libraries test/ A directory for the projects unit tests .</description></item><item><title>Custom Metrics</title><link>https://rstreams.org/rstreams-flow/custom-metrics/</link><pubDate>Wed, 08 Jun 2022 19:52:46 +0000</pubDate><guid>https://rstreams.org/rstreams-flow/custom-metrics/</guid><description>ToC
Summary Installation Metric Config Permissions Example Create a DynamicMetricReporter DynamicMetricReporter Scope DynamicMetricReporter Session Metrics Tags Tags for Lambdas and Bots Examples Note that the rstreams-metrics module does not today have any dependencies on a particular SDK version and can be used independently.
Summary Developers will want to send custom metrics from their code to external systems. This is accomplished with a new module named rstreams-metrics. The goal is to create a library, provided by rstreams-metrics, that abstracts away an external telemetry system from one&amp;rsquo;s code.</description></item><item><title>Configuring RStreams</title><link>https://rstreams.org/rstreams-flow/configuring-rstreams/</link><pubDate>Thu, 19 May 2022 17:55:12 +0000</pubDate><guid>https://rstreams.org/rstreams-flow/configuring-rstreams/</guid><description>ToC
Summary RStreams Config Structure RStreams ConfigProviderChain RStreams Config Secrets Manager Secret Approach RStreams Flow Projects Any Type of Project: Environment Variables Environment Variables Approach File Approach Summary Understand how to provide the configuration that the RStreams SDK needs in order to communicate with an instance of an RStreams Bus.
RStreams Config Structure This is what the config looks like that the RStreams SDKs need to have at run time in order to connect to an RStreams Bus as the SDK reaches out to Kinesis, DynamoDB, S3, etc.</description></item></channel></rss>