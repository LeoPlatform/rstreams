TODO: inject data from file
https://input.sh/hugo-data-into-content-with-a-shortcode/

-- running locally
   npm run serve

-- build static site locally
   npm run build

-- github deployment
   Just check into master and the website will be generated using a github action (see .github/workflows/gh-pages.yml).
   This will generate the hugo website as a side effect of checking into master using the above github action
   and then it will push the website to the gh-pages branch and deploy to rstreams.org.

   NOTE!!! Sometimes, github sucks and removes the rstreams.org domain when you check in.

   You will know that happened because rstreams.org will give you a 404 and the 
   "pages-build-deployment" action in the actions tab of github will say that it deployed to
   https://leoplatform.github.io/rstreams/ instead of rstreams.org.  Go here 
   https://github.com/LeoPlatform/rstreams/settings/pages and add rstreams.org back in the Custom 
   domain field and hit Save.  It will then auto deploy to that custom domain.

   Go to actions after push new changes to master and you will see the automation do its thing
   here: https://github.com/LeoPlatform/rstreams/actions

-- godocs theme customizations
   overriding theme to make HTML changes by copying from themes/godocs-1/<some file> to layouts/<same path>/<same file name>
   and then look for <!--CHANGE in the files to see what I changed. 

   copied themes/godocs-1/assets/scss/templates/_main.scss to assets/scss/templates/_main.scss and added 
   this to the very bottom of the file
    /*CHANGE - added to grow width of site for larger screens */
    @media (min-width: 1440px) {
      .container, .container-lg, .container-md, .container-sm, .container-xl {
        max-width: 1440px;
      }
    }

-- hugo content
   -- markdown syntax
      https://www.markdownguide.org/tools/hugo/

   -- Main topic on home screen
      Make a directory in content.

  -- Link to another page, relative or absolute if start with a /, don't need the language or .md 
     [Event Streaming Primer](event-streaming-primer)





-- github pages godaddy domain
   https://jinnabalu.medium.com/godaddy-domain-with-github-pages-62aed906d4ef





-- typedoc
http://typedoc.org/guides/installation/
https://typedoc.org/example/modules.html#EasyFormDialog


-- tsdoc
https://tsdoc.org/

-- hugo
builds static website with templates

-- install hugo using npm: hugo + npm
how to use npm to build hugo so can build the website as part of CI/CD pipeline
https://www.blogtrack.io/blog/powerful-blog-setup-with-hugo-and-npm/

-- install hugo bin
   modify package.json to get extended version of hugo
     "hugo-bin": {
        "buildTags": "extended"
     }

   npm install --save-dev hugo-bin 


-- create an initial website
npx hugo new site . --force

    Saw this after running the above command

     1. Download a theme into the same-named folder.
        Choose a theme from https://themes.gohugo.io/ or
        create your own with the "hugo new theme <THEMENAME>" command.
     2. Perhaps you want to add some content. You can add single files
        with "hugo new <SECTIONNAME>/<FILENAME>.<FORMAT>".
     3. Start the built-in live server via "hugo server".

     Visit https://gohugo.io/ for quickstart guide and full documentation.

-- theme used https://docs.gethugothemes.com/godocs/
   purchased here https://gethugothemes.com/

-- theme uses bootstrap https://getbootstrap.com/

