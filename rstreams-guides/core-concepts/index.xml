<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Core Concepts on RStreams</title><link>https://rstreams.org/rstreams-guides/core-concepts/</link><description>Recent content in Core Concepts on RStreams</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 04 Apr 2022 11:02:05 +0600</lastBuildDate><atom:link href="https://rstreams.org/rstreams-guides/core-concepts/index.xml" rel="self" type="application/rss+xml"/><item><title>Event Streaming Primer</title><link>https://rstreams.org/rstreams-guides/core-concepts/event-streaming-primer/</link><pubDate>Mon, 04 Apr 2022 11:02:05 +0600</pubDate><guid>https://rstreams.org/rstreams-guides/core-concepts/event-streaming-primer/</guid><description>ToC
Summary What&amp;rsquo;s a Stream Continuous data systems before event streaming Event streaming compared to APIs
One cannot understand the problems RStreams solves or reason about its implementation/usage without a fundamental understanding of event streaming compared to traditional microservices approaches.
Summary Some systems work with parties that are constantly generating new data. Client data flowing from these parties tends to flow in a sequential order that we call an event stream.</description></item><item><title>Fundamentals</title><link>https://rstreams.org/rstreams-guides/core-concepts/fundamentals/</link><pubDate>Mon, 04 Apr 2022 11:02:05 +0600</pubDate><guid>https://rstreams.org/rstreams-guides/core-concepts/fundamentals/</guid><description>Events Event ID TODO
Pipe TODO
Pipe Stream Step TODO
Stream Pipe Step or Bots/Queues. TODO
Checkpoint Writing last read event ID back to queue. TODO
Event source timestamp Every event that hits a queue came from somewhere originally. Initially, perhaps it was loaded into a queue from a database. Then, a bot read from the queue and let&amp;rsquo;s say transformed the event and put it in another queue.</description></item><item><title>Event Handling Semantics</title><link>https://rstreams.org/rstreams-guides/core-concepts/event-handling-semantics/</link><pubDate>Mon, 04 Apr 2022 11:02:05 +0600</pubDate><guid>https://rstreams.org/rstreams-guides/core-concepts/event-handling-semantics/</guid><description>ToC
RStreams was designed so that a developer can register a bot (lambda function) that the RStreams Bus will invoke whenever there are new events to be read from a given queue.
It is expected that events could be, and often will be, continuously being produced and flowing into a queue.
So, the desire is for your bot to be invoked and get new events from the a queue and process them, doing this for as long as it safely can before shutting itself down.</description></item></channel></rss>